{"ast":null,"code":"import io from \"socket.io-client\";\nconst SOCKET_URL = \"http://localhost:3000\";\nclass WSService {\n  constructor() {\n    this.initializeSocket = async () => {\n      try {\n        this.socket = io(SOCKET_URL, {\n          transports: [\"websocket\"]\n        });\n        // console.log(\"initializing socket\", this.socket);\n\n        this.socket.on(\"connect\", data => {\n          console.log(\"=== socket connected ====\");\n        });\n        this.socket.on(\"disconnect\", data => {\n          console.log(\"=== socket disconnected ====\");\n        });\n        this.socket.on(\"error\", data => {\n          console.log(\"socekt error\", data);\n        });\n      } catch (error) {\n        console.log(\"scoket is not inialized\", error);\n      }\n    };\n  }\n  emit(event) {\n    let data = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    this.socket.emit(event, data);\n  }\n  on(event, cb) {\n    this.socket.on(event, cb);\n  }\n  removeListener(listenerName) {\n    this.socket.removeListener(listenerName);\n  }\n}\nconst SocketClient = new WSService();\nexport default SocketClient;","map":{"version":3,"names":["io","SOCKET_URL","WSService","initializeSocket","socket","transports","on","data","console","log","error","emit","event","cb","removeListener","listenerName","SocketClient"],"sources":["/Users/konedanguiismael/workspace/PROJECTS/Messenger/Messenger/web/src/core/network/SocketClient.js"],"sourcesContent":["import io from \"socket.io-client\";\n\nconst SOCKET_URL = \"http://localhost:3000\";\n\nclass WSService {\n  initializeSocket = async () => {\n    try {\n      this.socket = io(SOCKET_URL, {\n        transports: [\"websocket\"],\n      });\n      // console.log(\"initializing socket\", this.socket);\n\n      this.socket.on(\"connect\", (data) => {\n        console.log(\"=== socket connected ====\");\n      });\n\n      this.socket.on(\"disconnect\", (data) => {\n        console.log(\"=== socket disconnected ====\");\n      });\n\n      this.socket.on(\"error\", (data) => {\n        console.log(\"socekt error\", data);\n      });\n    } catch (error) {\n      console.log(\"scoket is not inialized\", error);\n    }\n  };\n\n  emit(event, data = {}) {\n    this.socket.emit(event, data);\n  }\n\n  on(event, cb) {\n    this.socket.on(event, cb);\n  }\n\n  removeListener(listenerName) {\n    this.socket.removeListener(listenerName);\n  }\n}\n\nconst SocketClient = new WSService();\n\nexport default SocketClient;\n"],"mappings":"AAAA,OAAOA,EAAE,MAAM,kBAAkB;AAEjC,MAAMC,UAAU,GAAG,uBAAuB;AAE1C,MAAMC,SAAS,CAAC;EAAA;IAAA,KACdC,gBAAgB,GAAG,YAAY;MAC7B,IAAI;QACF,IAAI,CAACC,MAAM,GAAGJ,EAAE,CAACC,UAAU,EAAE;UAC3BI,UAAU,EAAE,CAAC,WAAW;QAC1B,CAAC,CAAC;QACF;;QAEA,IAAI,CAACD,MAAM,CAACE,EAAE,CAAC,SAAS,EAAGC,IAAI,IAAK;UAClCC,OAAO,CAACC,GAAG,CAAC,2BAA2B,CAAC;QAC1C,CAAC,CAAC;QAEF,IAAI,CAACL,MAAM,CAACE,EAAE,CAAC,YAAY,EAAGC,IAAI,IAAK;UACrCC,OAAO,CAACC,GAAG,CAAC,8BAA8B,CAAC;QAC7C,CAAC,CAAC;QAEF,IAAI,CAACL,MAAM,CAACE,EAAE,CAAC,OAAO,EAAGC,IAAI,IAAK;UAChCC,OAAO,CAACC,GAAG,CAAC,cAAc,EAAEF,IAAI,CAAC;QACnC,CAAC,CAAC;MACJ,CAAC,CAAC,OAAOG,KAAK,EAAE;QACdF,OAAO,CAACC,GAAG,CAAC,yBAAyB,EAAEC,KAAK,CAAC;MAC/C;IACF,CAAC;EAAA;EAEDC,IAAI,CAACC,KAAK,EAAa;IAAA,IAAXL,IAAI,uEAAG,CAAC,CAAC;IACnB,IAAI,CAACH,MAAM,CAACO,IAAI,CAACC,KAAK,EAAEL,IAAI,CAAC;EAC/B;EAEAD,EAAE,CAACM,KAAK,EAAEC,EAAE,EAAE;IACZ,IAAI,CAACT,MAAM,CAACE,EAAE,CAACM,KAAK,EAAEC,EAAE,CAAC;EAC3B;EAEAC,cAAc,CAACC,YAAY,EAAE;IAC3B,IAAI,CAACX,MAAM,CAACU,cAAc,CAACC,YAAY,CAAC;EAC1C;AACF;AAEA,MAAMC,YAAY,GAAG,IAAId,SAAS,EAAE;AAEpC,eAAec,YAAY"},"metadata":{},"sourceType":"module","externalDependencies":[]}